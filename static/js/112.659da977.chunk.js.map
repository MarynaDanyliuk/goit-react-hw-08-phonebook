{"version":3,"file":"static/js/112.659da977.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://react-homework-template/./src/components/TextField/TextField.module.css?b6c9","components/TextField/TextField.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/pages/RegisterPage/RegisterPage.module.css?9ce6","webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/initialState.js","components/RegisterForm/fields.js","components/RegisterForm/RegisterForm.jsx","components/pages/RegisterPage/RegisterPage.jsx","services/useForm.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\"};","import css from '../Button/Button.module.css';\n\nconst Button = ({ children, type = 'submit' }) => {\n  return (\n    <button className={css.button} type={type}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TextField_wrapper__650c1\",\"input\":\"TextField_input__Co8UC\",\"label\":\"TextField_label__vkJH3\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport css from '../TextField/TextField.module.css';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n  return (\n    <div className={css.wrapper}>\n      <label htmlFor={id} className={css.label}>{label}</label>\n      <input id={id} onChange={handleChange} {...props} className={css.input} />\n    </div>\n  );\n};\n\nexport default TextField;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterPage_container__RFioa\",\"page_title\":\"RegisterPage_page_title__md0GF\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\"};","// const { default: inititalState } = require('components/Form/initialState');\n\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    required: true,\n    placeholder: 'User name',\n    label: 'User name',\n  },\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    placeholder: 'User email',\n    label: 'User email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    placeholder: 'User password',\n    label: 'User password',\n  },\n};\n\nexport default fields;\n","import css from '../RegisterForm/RegisterForm.module.css';\n\nimport TextField from 'components/TextField/TextField';\nimport Button from 'components/Button/Button';\n\nimport useForm from 'services/useForm';\n\nimport initialState from './initialState';\nimport fields from './fields';\n\nexport const RegisterForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { name, email, password } = state;\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <TextField value={name} onChange={handleChange} {...fields.name} />\n      <TextField value={email} onChange={handleChange} {...fields.email} />\n      <TextField value={password} onChange={handleChange} {...fields.password} />\n      <Button>Register</Button>\n    </form>\n  );\n};\n","import css from 'components/pages/RegisterPage/RegisterPage.module.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { signup } from 'redux/auth/auth-operations';\nimport { isUserLogin } from 'redux/auth/auth-selectors';\n\nconst RegisterPage = () => {\n  const isLogin = useSelector(isUserLogin);\n  const dispatch = useDispatch();\n  const handleSignup = data => {\n    dispatch(signup(data));\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <div className={css.container}>\n      <h2 className={css.page_title}>Register page</h2>\n      <RegisterForm onSubmit={handleSignup} />\n    </div>\n  );\n};\nexport default RegisterPage;\n","import { useState, useCallback } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["children","type","className","css","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","label","handleChange","props","id","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor","onChange","name","email","password","required","placeholder","RegisterForm","onSubmit","useForm","initialState","state","handleSubmit","TextField","value","fields","Button","isLogin","useSelector","isUserLogin","dispatch","useDispatch","to","data","signup","useState","setState","useCallback","prevState","e","preventDefault"],"sourceRoot":""}